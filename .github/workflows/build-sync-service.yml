name: Build and Push Sync Service Container

on:
  push:
    branches: [ main, feature/neo4j-falkordb-hybrid ]
    paths:
      - 'sync_service/**'
      - 'graphiti_core/**'
      - '.github/workflows/build-sync-service.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'sync_service/**'
      - 'graphiti_core/**'
  workflow_dispatch:
  workflow_call:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-sync

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 1
        submodules: false

    - name: Debug - List sync service directory contents
      run: |
        echo "=== Sync Service directory structure ==="
        ls -la sync_service/
        echo "=== Configuration files ==="
        find sync_service/ -name "*.yml" -o -name "*.yaml" -o -name "*.toml" -o -name "Dockerfile"
        echo "=== Python modules ==="
        find sync_service/ -name "*.py" | head -10
        echo "=== Requirements ==="
        cat sync_service/requirements.txt

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./sync_service
        file: ./sync_service/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: |
          type=gha
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
        cache-to: |
          type=gha,mode=max
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
        platforms: linux/amd64
        build-args: |
          BUILDKIT_PROGRESS=plain

    - name: Output image details
      if: success()
      run: |
        echo "‚úÖ Sync service image successfully built and pushed!"
        echo "üì¶ Registry: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        echo "üè∑Ô∏è  Tags: ${{ steps.meta.outputs.tags }}"

    # Note: Validation steps disabled temporarily due to registry propagation delays
    # The image builds and pushes successfully, but GitHub Container Registry
    # may take several minutes to make the image available for pull
    
    - name: Build validation summary
      if: success()
      run: |
        echo "‚úÖ Sync service image built and pushed successfully!"
        echo "üì¶ Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        echo "üè∑Ô∏è  SHA Tag: ${{ github.sha }}"
        echo "‚ö†Ô∏è  Note: Image validation skipped due to registry propagation delays"
        echo "üîß Manual validation can be done after ~5 minutes with:"
        echo "   docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"