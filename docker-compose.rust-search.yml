version: '3.8'

# This compose file adds the Rust search service to the existing Graphiti stack
# Usage: docker-compose -f docker-compose.yml -f docker-compose.rust-search.yml up

services:
  graphiti-search-rs:
    build: 
      context: ./graphiti-search-rs
      dockerfile: Dockerfile
    image: ghcr.io/oculairmedia/graphiti-search-rs:${RUST_SEARCH_VERSION:-latest}
    container_name: graphiti-search-rs
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - FALKORDB_HOST=${FALKORDB_HOST:-falkordb}
      - FALKORDB_PORT=${FALKORDB_PORT:-6379}
      - GRAPH_NAME=${GRAPH_NAME:-graphiti_migration}
      - REDIS_URL=redis://${REDIS_HOST:-redis}:${REDIS_PORT:-6379}
      - MAX_CONNECTIONS=${MAX_CONNECTIONS:-32}
      - CACHE_TTL=${CACHE_TTL:-300}
      - ENABLE_SIMD=${ENABLE_SIMD:-true}
      - PARALLEL_THRESHOLD=${PARALLEL_THRESHOLD:-100}
      - RUST_LOG=${RUST_LOG:-graphiti_search=debug,info}
    depends_on:
      falkordb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - graphiti-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  # Add health checks to existing services if not present
  falkordb:
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Optional: Add a load balancer to route between Python and Rust search
  search-router:
    image: nginx:alpine
    container_name: graphiti-search-router
    ports:
      - "3005:80"
    volumes:
      - ./nginx-search-router.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - graphiti-search-rs
      # - graphiti-python-api  # Uncomment if you have a Python API service
    networks:
      - graphiti-network
    restart: unless-stopped

networks:
  graphiti-network:
    external: true
    name: graphiti_network